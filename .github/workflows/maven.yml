# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Test con MySQL remoto


on:
  push:
    branches:
      - master  # O la rama que desees
  pull_request:
    branches:
      - master  # O la rama que desees

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    # Paso 1: Obtener el código del repositorio
    - name: Check out code
      uses: actions/checkout@v2

    # Paso 2: Configurar Java (ajusta la versión de Java según tu proyecto)
    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: '23'  # Ajusta la versión según tu proyecto
        distribution: 'openjdk'

    # Paso 3: Instalar dependencias de Maven
    - name: Install dependencies
      run: mvn install -DskipTests

    # Paso 4: Copiar el archivo db.properties (si está en el directorio correcto)
    - name: Copy db.properties
      run: |
        cp src/main/resources/db.properties $GITHUB_WORKSPACE/target/classes/

    # Paso 5: Ejecutar las pruebas unitarias
    - name: Run tests
      run: mvn test

    # Paso 6: Verificar los resultados de las pruebas
    - name: Verify test results
      run: |
        tail -n 10 target/surefire-reports/*.txt  # Muestra las últimas 10 líneas de los resultados de las pruebas


    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
